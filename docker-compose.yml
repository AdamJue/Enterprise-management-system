services:
  # MySQL 数据库
  mysql:
    image: mysql:8.0
    container_name: ems_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root123456
      MYSQL_DATABASE: enterprise_management
      MYSQL_USER: ems_user
      MYSQL_PASSWORD: ems_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./scripts/init-database.sql:/docker-entrypoint-initdb.d/init-database.sql
    networks:
      - ems_network
    command: --default-authentication-plugin=mysql_native_password

  # Redis 缓存
  redis:
    image: redis:7-alpine
    container_name: ems_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - ems_network

  # RabbitMQ 消息队列
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: ems_rabbitmq
    restart: unless-stopped
    environment:
      RABBITMQ_DEFAULT_USER: ems_user
      RABBITMQ_DEFAULT_PASS: ems_password
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - ems_network

  # Elasticsearch 日志存储
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: ems_elasticsearch
    restart: unless-stopped
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - ems_network

  # Kibana 日志可视化
  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.0
    container_name: ems_kibana
    restart: unless-stopped
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - ems_network

  # API Gateway 服务
  api-gateway:
    build:
      context: ./backend/api-gateway
      dockerfile: Dockerfile
    container_name: ems_api_gateway
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DATABASE_URL=mysql://ems_user:ems_password@mysql:3306/enterprise_management
      - REDIS_URL=redis://redis:6379
      - RABBITMQ_URL=amqp://ems_user:ems_password@rabbitmq:5672
      - JWT_SECRET=your-jwt-secret-key
      - CORS_ORIGIN=http://localhost:4200
    depends_on:
      - mysql
      - redis
      - rabbitmq
    networks:
      - ems_network

  # User Service 微服务
  user-service:
    build:
      context: ./backend/user-service
      dockerfile: Dockerfile
    container_name: ems_user_service
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - DATABASE_URL=mysql://ems_user:ems_password@mysql:3306/enterprise_management
      - REDIS_URL=redis://redis:6379
      - RABBITMQ_URL=amqp://ems_user:ems_password@rabbitmq:5672
    depends_on:
      - mysql
      - redis
      - rabbitmq
    networks:
      - ems_network

  # Admin Service 微服务
  admin-service:
    build:
      context: ./backend/admin-service
      dockerfile: Dockerfile
    container_name: ems_admin_service
    restart: unless-stopped
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=production
      - PORT=3002
      - DATABASE_URL=mysql://ems_user:ems_password@mysql:3306/enterprise_management
      - REDIS_URL=redis://redis:6379
      - RABBITMQ_URL=amqp://ems_user:ems_password@rabbitmq:5672
    depends_on:
      - mysql
      - redis
      - rabbitmq
    networks:
      - ems_network

  # Order Service 微服务
  order-service:
    build:
      context: ./backend/order-service
      dockerfile: Dockerfile
    container_name: ems_order_service
    restart: unless-stopped
    ports:
      - "3003:3003"
    environment:
      - NODE_ENV=production
      - PORT=3003
      - DATABASE_URL=mysql://ems_user:ems_password@mysql:3306/enterprise_management
      - REDIS_URL=redis://redis:6379
      - RABBITMQ_URL=amqp://ems_user:ems_password@rabbitmq:5672
    depends_on:
      - mysql
      - redis
      - rabbitmq
    networks:
      - ems_network

  # Frontend Angular 应用
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: ems_frontend
    restart: unless-stopped
    ports:
      - "4200:4200"
    environment:
      - NODE_ENV=production
    depends_on:
      - api-gateway
    networks:
      - ems_network

  # Nginx 反向代理
  nginx:
    image: nginx:alpine
    container_name: ems_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
    depends_on:
      - api-gateway
      - frontend
    networks:
      - ems_network

volumes:
  mysql_data:
  redis_data:
  rabbitmq_data:
  elasticsearch_data:

networks:
  ems_network:
    driver: bridge 